<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.project.review.dao.ReviewDAO">
	
	<!-- 리뷰 등록 -->	
	<insert id="writeReview" parameterType="reviewVO">
		insert into review(review_no, id, book_id, rating, content, good, bad)
			   values(review_no.nextval, #{id}, #{book_id}, #{rating}, #{content}, #{good}, #{bad})
	</insert>
	
	<!-- 회원가입 리뷰 등록 -->	
	<insert id="addUserRating" parameterType="reviewVO">
		insert into review(review_no, id, book_id, rating)
			   values(review_no.nextval, #{id}, #{book_id}, #{rating})
	</insert>
	
	<!-- 리뷰 book_id로 불러오기 -->	
	<select id="reviewListByBook_id" resultType="reviewVO" parameterType="string">
		select review_no, r.id, book_id, rating, content, good, bad, to_char(review_reg_date, 'yyyy-mm-dd') as review_reg_date, nickname
		  from review r inner join db_user u
		    on r.id = u.id
		  where book_id = #{book_id}
		  order by review_no desc
	</select>
	
	<!-- 책 평점 불러오기 -->	
	<select id="book_avg_rating" resultType="Integer" parameterType="string">
		select rating
		  from review
		  where book_id = #{book_id}
	</select>
	
	<!-- review_reaction 확인 -->
	<select id="check_review_reaction" resultType="reviewReactionVO" parameterType="reviewReactionVO">
		select good_or_bad
		  from review_reaction
		  where review_no = #{review_no} and id = #{id}
	</select>
	
	<!-- review_reaction 입력 -->
	<insert id="insert_review_reaction" parameterType="reviewReactionVO">
		insert into review_reaction(review_no, id, good_or_bad)
			   values(#{review_no}, #{id}, #{good_or_bad})
	</insert>
	
	<!-- review_reaction 수정 -->
	<update id="update_review_reaction" parameterType="reviewReactionVO">
		update review_reaction
		   set good_or_bad = #{good_or_bad}
		   where review_no = #{review_no} and id = #{id}
	</update>
	
	<!-- review_no로 reaction 수 조회 -->
	<select id="view_reaction_num" resultType="Integer" parameterType="reviewReactionVO">
		select count(*)
		  from review_reaction
		  where review_no = #{review_no} and good_or_bad = #{good_or_bad}
	</select>
	
	<update id="reviewGoodBadCalc" parameterType="reviewReactionVO">
		update review
		   set good = (select count(*)
		                 from review_reaction
		                 where review_no = #{review_no} and good_or_bad = 1),
		       bad  = (select count(*)
		                 from review_reaction
		                 where review_no = #{review_no} and good_or_bad = 0)
		  where review_no = #{review_no}
	</update>
	
</mapper>